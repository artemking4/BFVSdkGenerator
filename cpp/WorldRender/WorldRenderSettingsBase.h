// Object: WorldRenderSettingsBase
// ClassId: 5720
// RuntimeId: 39877
// TypeInfo: 0x0000000144EB9960
#include "../Core/DataContainer.h"
#include "../Global/Float32.h"
#include "../Global/Boolean.h"
#include "../WorldRender/ResolutionController.h"
#include "../Core/QualityLevel.h"
#include "../Global/Uint32.h"
#include "../Global/Int32.h"
#include "../Core/Vec3.h"
#include "../WorldRender/WorldViewMode.h"
#include "../WorldRender/MipmapFilterMode.h"
#include "../WorldRender/FrameSynthesisMode.h"

#pragma pack(push, 16)
namespace WorldRender {
    class WorldRenderSettingsBase : public Core::DataContainer {
        Float32 CullScreenAreaScale; // 0x18
        Float32 CullFov; // 0x1C
        Core::Vec3 MotionBlurClearColor; // 0x20
        Core::Vec3 DynamicEnvmapDefaultPosition; // 0x30
        Float32 MinShadowViewCoverage; // 0x40
        Float32 ResolutionScaleDynamicTargetTime; // 0x44
        Float32 ResolutionScaleDynamicMin; // 0x48
        WorldRender::ResolutionController ResolutionScaleDynamicController; // 0x4C
        Float32 IndirectSpecularIntensity; // 0x50
        Float32 IndirectSpecularReflectanceScale; // 0x54
        Float32 IndirectSpecularProbesIntensity; // 0x58
        Float32 IndirectSpecularProbesReflectanceScale; // 0x5C
        Core::QualityLevel SunShadowmapQualityLevel; // 0x60
        Float32 ShadowmapMinFov; // 0x64
        Float32 ShadowmapSizeZScale; // 0x68
        Uint32 ShadowmapResolution; // 0x6C
        Uint32 ShadowmapQuality; // 0x70
        Float32 ShadowmapPoissonFilterScale; // 0x74
        Uint32 ShadowmapSliceCount; // 0x78
        Uint32 Shadowmap32SliceCount; // 0x7C
        Float32 ShadowmapSliceSchemeWeight; // 0x80
        Float32 ShadowmapFirstSliceScale; // 0x84
        Float32 ShadowmapViewDistance; // 0x88
        Float32 ShadowmapExtrusionLength; // 0x8C
        Float32 ShadowmapTransitionBlendAmount; // 0x90
        Uint32 DistantShadowCacheResolution; // 0x94
        Int32 DistantShadowCacheForceResolution; // 0x98
        Float32 DistantShadowCacheResolutionScale; // 0x9C
        Uint32 DistantShadowCacheMaxResolution; // 0xA0
        Uint32 DistantShadowCacheForceMode; // 0xA4
        Float32 DistantShadowCacheCoalesceTime; // 0xA8
        Float32 ShadowmapForegroundExtrusionLength; // 0xAC
        Float32 ShadowmapForegroundSplitDistance; // 0xB0
        Float32 ShadowmapForegroundSizeZScale; // 0xB4
        Int32 SunPcssMaxSampleCount; // 0xB8
        Int32 SunPcssAdaptiveSampleIncrement; // 0xBC
        Float32 MotionBlurScale; // 0xC0
        Float32 MotionBlurFixedShutterTime; // 0xC4
        Float32 MotionBlurMax; // 0xC8
        Float32 MotionBlurRadialBlurMax; // 0xCC
        Float32 MotionBlurNoiseScale; // 0xD0
        Uint32 MotionBlurQuality; // 0xD4
        Uint32 MotionBlurDebugMode; // 0xD8
        Uint32 MotionBlurMaxSampleCount; // 0xDC
        Float32 ForceMotionBlurDepthCutoff; // 0xE0
        Float32 ForceMotionBlurCutoffGradientScale; // 0xE4
        Float32 MotionBlurDepthCheckThreshold; // 0xE8
        Float32 MotionBlurDepthCheckMaxDistance; // 0xEC
        Float32 TiledMotionBlurVarianceThresholdScale; // 0xF0
        Uint32 TiledMotionBlurVelMagDepthDownsample; // 0xF4
        Uint32 MultisampleCount; // 0xF8
        Uint32 MultisampleQuality; // 0xFC
        Int32 OnlyShadowmapSlice; // 0x100
        WorldRender::WorldViewMode ViewMode; // 0x104
        Uint32 AdditionalHdrTargetInESRAM; // 0x108
        Int32 DrawDebugBlurPyramidMipLevel; // 0x10C
        Uint32 DrawDebugBuffers; // 0x110
        Float32 HalfResDepthMinMaxDitherThreshold; // 0x114
        Uint32 PhysicalSkyPrecisionHeight; // 0x118
        Uint32 PhysicalSkyPrecisionView; // 0x11C
        Uint32 PhysicalSkyPrecisionSun; // 0x120
        Uint32 PhysicalSkyScatteringOrders; // 0x124
        Uint32 PhysicalSkyAerialPerspectiveTextureWidth; // 0x128
        Uint32 PhysicalSkyAerialPerspectiveTextureHeight; // 0x12C
        Uint32 PhysicalSkyAerialPerspectiveTextureDepth; // 0x130
        Uint32 PhysicalSkyScatteringEvalFrameCount; // 0x134
        Float32 PhysicalSkyAerialPerspectiveMaxDistance; // 0x138
        Float32 SkyEnvmapFilterWidth; // 0x13C
        Uint32 SkyEnvmapResolution; // 0x140
        Int32 DrawDebugSkyEnvmapMipLevel; // 0x144
        WorldRender::MipmapFilterMode SkyEnvmapFilterMode; // 0x148
        Uint32 SkyEnvmapSidesPerFrameCount; // 0x14C
        Float32 SkyEnvmapUpdateCountThreshold; // 0x150
        Float32 SkyEnvmapUpdateValueThreshold; // 0x154
        Uint32 SkyEnvmapUpdateDelayCount; // 0x158
        Float32 DynamicEnvmapFilterWidth; // 0x15C
        Int32 DrawDebugDynamicEnvmapMipLevel; // 0x160
        WorldRender::MipmapFilterMode DynamicEnvmapFilterMode; // 0x164
        Uint32 DynamicEnvmapSpecularConvolutionSampleCount; // 0x168
        Uint32 DynamicEnvmapShadowmapResolution; // 0x16C
        Int32 DynamicEnvmapShadowmapFarPlane; // 0x170
        Int32 DynamicEnvmapShadowmapShadowExtrusion; // 0x174
        WorldRender::FrameSynthesisMode FrameSynthesisMode; // 0x178
        Boolean DeferredShadingEnable; // 0x17C
        Boolean ForwardOpaqueEnable; // 0x17D
        Boolean FullZPassEnable; // 0x17E
        Boolean TileMaterialClassificationEnable; // 0x17F
        Boolean ShadowmapsEnable; // 0x180
        Boolean ShadowmapsParallelEnable; // 0x181
        Boolean ShadowmapArrayEnable; // 0x182
        Boolean TransparencyShadowmapsEnable; // 0x183
        Boolean ResolutionScaleDynamicEnable; // 0x184
        Boolean DrawDebugDynamicResolutionTable; // 0x185
        Boolean TransparencyShadowmapsHalfRes; // 0x186
        Boolean ShadowmapBatchClearSlices; // 0x187
        Boolean ShadowmapFixedMovementEnable; // 0x188
        Boolean ShadowmapFixedDepthEnable; // 0x189
        Boolean ShadowmapViewDistanceScaleEnable; // 0x18A
        Boolean ShadowmapCullVolumeEnable; // 0x18B
        Boolean ShadowmapAdjustFarPlane; // 0x18C
        Boolean ShadowmapAccumEnable; // 0x18D
        Boolean ShadowmapAccumReuseEnable; // 0x18E
        Boolean ShadowmapAccumBilinearEnable; // 0x18F
        Boolean ShadowmapAccumStencilEnable; // 0x190
        Boolean ShadowmapAccumStencil2Enable; // 0x191
        Boolean ShadowmapTransitionBlendEnable; // 0x192
        Boolean DistantShadowCacheDrawFrustum; // 0x193
        Boolean DistantShadowCacheEnable; // 0x194
        Boolean DistantShadowCacheDrawDebug; // 0x195
        Boolean DistantShadowCacheUseQuadtree; // 0x196
        Boolean DistantShadowCacheBatchGroupEntityBake; // 0x197
        Boolean DistantShadowCacheRebakeOnLightChange; // 0x198
        Boolean ShadowmapForegroundEnable; // 0x199
        Boolean ShadowmapForegroundUseFirstPersonViewTransform; // 0x19A
        Boolean DxShadowmap16BitEnable; // 0x19B
        Boolean DxSpotLightShadowmap16BitEnable; // 0x19C
        Boolean DxDynamicEnvmapShadowmap16BitEnable; // 0x19D
        Boolean ApplyShadowmapsEnable; // 0x19E
        Boolean GenerateShadowmapsEnable; // 0x19F
        Boolean SimpleShadowmapsEnable; // 0x1A0
        Boolean ForwardShadingLocalLightShadowEnable; // 0x1A1
        Boolean EmitterShadowingBlendToggle; // 0x1A2
        Boolean EmitterShadowingManySamplesToggle; // 0x1A3
        Boolean DxLinearDepth32BitFormatEnable; // 0x1A4
        Boolean MotionBlurEnable; // 0x1A5
        Boolean MotionBlurForceOn; // 0x1A6
        Boolean MotionBlurPerceptualSpaceEnable; // 0x1A7
        Boolean MotionBlurOptimalStableVelocityFormula; // 0x1A8
        Boolean MotionBlurPreciseStableVelocityFormula; // 0x1A9
        Boolean MotionBlurStencilPassEnable; // 0x1AA
        Boolean MotionBlurGeometryPassEnable; // 0x1AB
        Boolean MotionBlurBackgroundPassEnable; // 0x1AC
        Boolean MotionBlurCenteredEnable; // 0x1AD
        Boolean TiledMotionBlurSeparableEnable; // 0x1AE
        Boolean TiledMotionBlurEnable; // 0x1AF
        Boolean TiledMotionBlurForce20PxTile; // 0x1B0
        Boolean MotionBlurUseDetailedGpuTimers; // 0x1B1
        Boolean MotionBlurHairPassEnable; // 0x1B2
        Boolean DrawTransparent; // 0x1B3
        Boolean DrawTransparentDecal; // 0x1B4
        Boolean TransparentAfterMotionBlur; // 0x1B5
        Boolean Enable; // 0x1B6
        Boolean HdrEnable; // 0x1B7
        Boolean LdrEnable; // 0x1B8
        Boolean ReadOnlyDepthEnable; // 0x1B9
        Boolean ConsoleRenderTargetPoolSharingEnable; // 0x1BA
        Boolean FastHdrEnable; // 0x1BB
        Boolean LinearDepthInESRAM; // 0x1BC
        Boolean ShadowAccumulationTargetInESRAM; // 0x1BD
        Boolean HBAOTemporariesInESRAM; // 0x1BE
        Boolean HalfResDepthResolveEnable; // 0x1BF
        Boolean DepthBufferCollisionEnable; // 0x1C0
        Boolean FinalPostEnable; // 0x1C1
        Boolean OutputGammaCorrectionEnable; // 0x1C2
        Boolean ScreenEffectEnable; // 0x1C3
        Boolean DrawSolidBoundingBoxes; // 0x1C4
        Boolean DrawLineBoundingBoxes; // 0x1C5
        Boolean DrawBoundingSpheres; // 0x1C6
        Boolean DrawFrustums; // 0x1C7
        Boolean DrawLocalIBLFrustums; // 0x1C8
        Boolean DrawDebugShadowmaps; // 0x1C9
        Boolean DrawDebugSpotLightShadowmaps; // 0x1CA
        Boolean DrawDebugSkyEnvmap; // 0x1CB
        Boolean DrawDebugVelocityBuffer; // 0x1CC
        Boolean DrawDebugZBufferEnable; // 0x1CD
        Boolean DrawDebugHalfResEnvironment; // 0x1CE
        Boolean DrawDebugDistortion; // 0x1CF
        Boolean DrawDebugVisibleEntityTypes; // 0x1D0
        Boolean DrawDebugSkyTextures; // 0x1D1
        Boolean DrawDebugMarschnerTextures; // 0x1D2
        Boolean DrawDebugDof; // 0x1D3
        Boolean DrawDebugDofFullscreen; // 0x1D4
        Boolean DrawDebugHalfResHdrTargets; // 0x1D5
        Boolean DrawDebugHiZMinMaxBufferEnable; // 0x1D6
        Boolean DrawDebugScreenSpaceRaytraceBucketsEnable; // 0x1D7
        Boolean DrawDebugEmitterSunTransmittanceMaps; // 0x1D8
        Boolean DrawDebugBlurPyramid; // 0x1D9
        Boolean DrawDebugOcclusionZBuffer; // 0x1DA
        Boolean DrawDebugTransparentGeometry; // 0x1DB
        Boolean WireframeEnable; // 0x1DC
        Boolean ZPassEnable; // 0x1DD
        Boolean OccluderMeshZPrepassEnable; // 0x1DE
        Boolean OccluderMeshZPrepassDrawEnable; // 0x1DF
        Boolean OccluderMeshZPrepassDebugEnable; // 0x1E0
        Boolean HalfResEnable; // 0x1E1
        Boolean ForceFullResEnable; // 0x1E2
        Boolean HalfResLensFlaresEnable; // 0x1E3
        Boolean ForegroundEnable; // 0x1E4
        Boolean ForegroundDepthClearEnable; // 0x1E5
        Boolean ForegroundZPassEnable; // 0x1E6
        Boolean ForegroundTransparentEnable; // 0x1E7
        Boolean BilateralHalfResCompositeEnable; // 0x1E8
        Boolean HalfResDepthMinMaxDitherEnable; // 0x1E9
        Boolean HalfResDepthMinMaxDitherAlternate; // 0x1EA
        Boolean SkyLightingEnable; // 0x1EB
        Boolean SkyRenderEnable; // 0x1EC
        Boolean SkyDepthFogEnable; // 0x1ED
        Boolean SkyHeightFogEnable; // 0x1EE
        Boolean SkyForwardScatteringEnable; // 0x1EF
        Boolean SkyAsyncEnable; // 0x1F0
        Boolean SkyComputeEnable; // 0x1F1
        Boolean PhysicalSkyEnabled; // 0x1F2
        Boolean PhysicalSkyForcePrecompute; // 0x1F3
        Boolean TransparentFoggingEnable; // 0x1F4
        Boolean DistortionEnable; // 0x1F5
        Boolean DistortionHalfResEnable; // 0x1F6
        Boolean Distortion8BitEnable; // 0x1F7
        Boolean DistortionTilingEnable; // 0x1F8
        Boolean StaticEnvmapEnable; // 0x1F9
        Boolean CustomEnvmapEnable; // 0x1FA
        Boolean CustomEnvmapMipmapClampEnable; // 0x1FB
        Boolean SkyEnvmapEnable; // 0x1FC
        Boolean SkyEnvmapMipmapGenEnable; // 0x1FD
        Boolean SkyEnvmapUpdateEnable; // 0x1FE
        Boolean SkyEnvmapForceUpdateEnable; // 0x1FF
        Boolean SkyEnvmapUseFastHDR; // 0x200
        Boolean SkyEnvmapUse32bitLatLongTexture; // 0x201
        Boolean SkyEnvmapDebugColorEnable; // 0x202
        Boolean SkyEnvmapGenerateNoBackdropEnable; // 0x203
        Boolean DynamicEnvmapEnable; // 0x204
        Boolean DynamicEnvmapMipmapGenEnable; // 0x205
        Boolean DrawDebugDynamicEnvmap; // 0x206
        Boolean DynamicEnvmapShadowmapEnable; // 0x207
        Boolean DynamicEnvmapShadowmapFarPlaneOverride; // 0x208
        Boolean DynamicEnvmapShadowmapShadowExtrusionOverride; // 0x209
        Boolean DrawDebugDynamicEnvmapShadowmap; // 0x20A
        Boolean DrawDynamicEnvmapFrustums; // 0x20B
        Boolean HairCoverageEnable; // 0x20C
        Boolean BatchMainWorldViewPasses; // 0x20D
        Boolean BatchOutdoorShadowPasses; // 0x20E
        Boolean EnableShaderDispatchClearing; // 0x20F
    }; // 0x210
    static_assert(sizeof(WorldRenderSettingsBase) == 0x210);
}
#pragma pack(pop)